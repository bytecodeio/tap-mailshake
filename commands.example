# Git clone
> cd ~/Devel
> git clone https://github.com/bytecodeio/tap-mixpanel.git
# Create virtual env
> cd tap-mixpanel
> pyenv install 3.5.2 # if needed
> pyenv local 3.5.2
> pyenv virtualenvwrapper_lazy
> mkvirtualenv tap-mixpanel
  OR: > mkvirtualenv -p /Users/jeff.huth/.pyenv/versions/3.5.2/bin/python3 tap-mixpanel
> workon tap-mixpanel
# pip installs w/in virtualenv
> pip install --upgrade pip
> pip install singer-tools
> pip install singer-python
> pip install requests
> pip install backoff
> pip install ipykernel
> pip install pylint
> pip install nose # unit testing
> pip install mixpanel-api
> python -m ipykernel install --user --name tap-mixpanel --display-name "Python (tap-mixpanel)"
# For personal tap, git clone and add upstream remote: https://help.github.com/en/articles/configuring-a-remote-for-a-fork
> cd ~/Devel/personal_forks
> git clone https://github.com/jeffhuth-bytecode/tap-mixpanel.git
> cd tap-mixpanel
> git remote -v
> git remote add upstream https://github.com/singer-io/tap-mixpanel.git
> git remote -v
# Sync personal fork with upstream: https://help.github.com/en/articles/syncing-a-fork
> git fetch upstream
> git checkout master
> git merge upstream/master
# Run in tap and target virtualenvs
# general discover
~/.virtualenvs/tap-mixpanel/bin/tap-mixpanel --config ~/Devel/tap-mixpanel/tap_config.json --discover > catalog.json
# singer-discover
./venv/bin/tap-mailshake --config ./tap_config.json --discover | ../../singer-discover/venv/bin/singer-discover -o ./catalog-campaigns.json
# singer-check-tap
./venv/bin/tap-mailshake --config ./tap_config.json --catalog ./catalog.json | ../../singer-tools/venv/bin/singer-check-tap > ./state.json
# target-stitch initial load - dry-run
./venv/bin/tap-mailshake --config ./tap_config.json --catalog ./catalog.json | ../../target-stitch/venv/bin/target-stitch --config ./target_config.json --dry-run > ./state.json
# target-stitch initial load
~/.virtualenvs/tap-mixpanel/bin/tap-mixpanel --config ~/Devel/tap-mixpanel/tap_config.json --catalog ~/Devel/tap-mixpanel/catalog.json | ~/.virtualenvs/target-stitch/bin/target-stitch --config ~/Devel/tap-mixpanel/target_config.json > ~/Devel/tap-mixpanel/state.json
# target-stitch incremental load (state_previous.json)
~/.virtualenvs/tap-mixpanel/bin/tap-mixpanel --config ~/Devel/tap-mixpanel/tap_config.json --catalog ~/Devel/tap-mixpanel/catalog.json --state ~/Devel/tap-mixpanel/state_previous.json | ~/.virtualenvs/target-stitch/bin/target-stitch --config ~/Devel/tap-mixpanel/target_config.json > ~/Devel/tap-mixpanel/state.json
# pylint
pylint tap_mixpanel -d missing-docstring -d logging-format-interpolation -d too-many-locals -d too-many-arguments
# target-json initial load
~/.virtualenvs/tap-mixpanel/bin/tap-mixpanel --config ~/Devel/tap-mixpanel/tap_config.json --catalog ~/Devel/tap-mixpanel/catalog.json | ~/.virtualenvs/target-json/bin/target-json > ~/Devel/tap-mixpanel/state.json
# target-json incremental load (state_previous.json)
~/.virtualenvs/tap-mixpanel/bin/tap-mixpanel --config ~/Devel/tap-mixpanel/tap_config.json --catalog ~/Devel/tap-mixpanel/catalog.json --state ~/Devel/tap-mixpanel/state_previous.json | ~/.virtualenvs/target-json/bin/target-json > ~/Devel/tap-mixpanel/state.json